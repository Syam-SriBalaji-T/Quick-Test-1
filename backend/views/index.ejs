<!DOCTYPE html>
<html>
<head>
  <title><%= data.title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" crossorigin="anonymous">
</head>
<body>
  <div>
    <h1><%= data.title %></h1>
  </div>
  <div id="sectionsBar">
    <% for(let i = 0 ; i < data.sections.length ; i++) { %>
        <button class="subjectbuttons" id=<%= `section${i}` %> class = "subjectNames"><%= `section${i+1} - ${data.sections[i].subject}` %></button>
    <% } %>
  </div>
  <div id="sectionBlock">
    <% for(let i = 0 ; i < data.sections.length ; i++) { %>
        <div id=<%= `section${i}Questions` %> style="display : none">
            <% for(let j = 1 ; j <= data.sections[i].questionsCount ; j++) { %>
                <button class="questionButtons" id=<%= `section${i}Question_${j}` %>><%= j %></button>
            <% } %>
        </div>
    <% } %>
  </div> 
  <div id="questionBlock">

  </div>
  <div>
    <button id="uploadButton">upload test</button>
  </div>
<script>
    let section = 0 ;
    let questionNumber = 2 ;
    let buttonsDisabled = false ;
    let questionInformation ;
    questionInformation = {} ;
    let questionBlock = document.getElementById("questionBlock") ;
    document.getElementById(`section${section}`).style.backgroundColor = 'orange' ;
    document.getElementById(`section${section}Questions`).style.display = "block" ;
    document.getElementById(`section${section}Question_${questionNumber}`).style.backgroundColor = "violet" ;
    const parts = window.location.href.split("/");
    const examId = parts[parts.length - 1];
    document.getElementById(`sectionBlock`).addEventListener("click", (e) => {
        if(buttonsDisabled) {
            return ;
        }
        if(e.target.className == "questionButtons") {
            submitFunction() ;
            document.getElementById(`section${section}Question_${questionNumber}`).style.backgroundColor = "white" ;
            questionNumber = parseInt(e.target.id.split("_")[1]) ;
            fetchQuestion() ;
            document.getElementById(`section${section}Question_${questionNumber}`).style.backgroundColor = "violet" ;
        }
    })
    document.getElementById("sectionsBar").addEventListener("click", (e) => {
        if(e.target.className == "subjectbuttons") {
            submitFunction() ;
            console.log(`section${section}Questions`) ;
            document.getElementById(`section${section}Questions`).style.display = "none" ;
            document.getElementById(`section${section}Question_${questionNumber}`).style.backgroundColor = "white" ;
            section = parseInt(e.target.id.slice(7)) ;
            questionNumber = 1 ;
            document.getElementById(`section${section}Questions`).style.display = "block" ;
            fetchQuestion() ;
            console.log(`section${section}Question_${questionNumber}`) ;
            document.getElementById(`section${section}Question_${questionNumber}`).style.backgroundColor = "violet" ;
        }
    })
    function fetchQuestion() {
        fetch(`http://localhost:3000/api/admin/getQuestion/${examId}/${section}/${questionNumber}`)
        .then(response => {
            if (!response.ok) throw new Error('Network response was not ok');
            return response.json();
        })
        .then(data => {
            questionInformation = data.data ;
            console.log(data) ;
            if(data.code == 2001) {
                displayEmpty() ;
            }
            if(data.code == 1001) {
                displayEmpty() ;
                displayQuestion(data.data) ;
            }
        })
        .catch(error => {
            console.error("Fetch error:", error);
        });
    }
    document.addEventListener("DOMContentLoaded", async () => {
        fetchQuestion() ;
    })
    function displayQuestion(data) {
        document.getElementById("questionStatement").value = data.statement ;
        for(let i=0;i<data.options.length;i++) {
            addOptionsFunction(true, data.options[i]) ;
        }
        document.getElementById("answerGiven").value = data.correctAnswer ;
    }
    function displayEmpty() {
        if(document.getElementById("question")) {
            document.getElementById("question").remove() ;
        }
        let element = document.createElement("div") ;
        element.id = "question" ;
        element.innerHTML = `
            <label for="questionStatement">Enter the question statement</label>
            <textarea name="" id="questionStatement"></textarea>
            <div>
                <h5>add options</h5>
                <button id="addOptionButton">+</button>
                <div id="options">
                </div>
                <h5>add answer</h5>
                <input type="text" id="answerGiven">
                <button id="submitButton">submit</button>
            </div>
        ` ;
        questionBlock.appendChild(element) ;
    }
    function addOptionsFunction(f, optionValue) {
        let value = "" ;
        if(f) {
            value = optionValue ;
        }
        let element = document.createElement("div") ;
            element.innerHTML = `
                <input type="text" class="givenOptions" value="${value}"><button class="optionRemovalButton">-</button>
            ` ;
            console.log(element) ;
            document.getElementById("options").appendChild(element) ;
    }
    document.getElementById("questionBlock").addEventListener('click', (e) => {
        if(e.target.id == "addOptionButton") {
            addOptionsFunction(false, {}) ;
        }
    })
    document.getElementById("questionBlock").addEventListener('click', (e) => {
        if(e.target.className == "optionRemovalButton") {
            e.target.parentElement.remove() ;
        }
    })
    document.getElementById("questionBlock").addEventListener('click', (e) => {
        if(e.target.id == "submitButton") {
            submitFunction() ;
        }
    })
    async function submitFunction() {
        buttonsDisabled = true ;
            let complete = true ;
            // console.log(questionInformation) ;
            let question = {} ;
            question.updated = [] ;
            let statement = document.getElementById("questionStatement").value ;
            if(!statement) {
                complete = false ;
            }
            if(statement != questionInformation.statement) {
                question.statement = statement ; 
                question.updated.push("statement") ;
            }
            let givenOptions = document.getElementsByClassName("givenOptions") ;
            if(givenOptions.length < 2) {
                complete = false ;
            }
            let options = [] ;
            for(let i=0;i<givenOptions.length;i++) {
                let optionValue = givenOptions[i].value ;
                if(!optionValue) {
                    complete = false ;
                }
                options.push(optionValue) ;
            }
            if(JSON.stringify(options) != JSON.stringify(questionInformation.options)) {
                question.options = options ;
                question.updated.push("options") ;
            }
            let answer = document.getElementById("answerGiven").value ;
            if(!answer) {
                complete = false ;
            }
            if(!options.includes(answer)) {
                complete = false ;
            }
            if(questionInformation.correctAnswer != answer) {
                question.correctAnswer = answer ;
                question.updated.push("correctAnswer") ;
            }
            question.complete = complete ;
            console.log(question) ;
            fetch(`http://localhost:3000/api/admin/saveQuestion/${examId}/${section}/${questionNumber}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(question)
                })
                .then(response => {
                if (!response.ok) throw new Error('Request failed');
                return response.json();
                })
                .then(data => {
                console.log('Response:', data);
                buttonsDisabled = false ;
                })
                .catch(error => {
                console.error('Error:', error);
                alert("Internal Server Error") ;
                });
    }
    document.getElementById("uploadButton").addEventListener("click", () => {
        submitFunction() ;
        fetch(`http://localhost:3000/api/admin/uploadTest/${examId}`)
        .then(response => {
            if (!response.ok) {
                if(response.status == 500) {
                    alert("Internal Server Error") ;
                    throw new Error('Internal Server Error');
                }
            }
            return response.json(); // Parse response as JSON
        })
        .then(data => {
            if(data.status) {
                alert("paper is uploaded successfully") ;
            }
            else {
                alert(data.message) ;
            }
        })
        .catch(error => {
            console.error('Fetch error:', error);
        });
    })
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>
</body>
</html>
